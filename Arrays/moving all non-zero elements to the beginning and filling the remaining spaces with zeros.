Problem Statement

A chocolate factory is packing chocolates into the packets. The chocolate packets here represent an array of N number of integer values. The task is to find the empty packets(0) of chocolate and push them to the end of the conveyor belt(array).

Example 1 :
N=8 and arr = [4,5,0,1,9,0,5,0].
There are 3 empty packets in the given set. These 3 empty packets represented as 0 should be pushed towards the end of the array

Input :
8  – Value of N
[4,5,0,1,9,0,5,0]

Output: 
4 5 1 9 5 0 0 0

Example 2:
Input:
6 — Value of N.
[6,0,1,8,0,2]

Output:
6 1 8 2 0 0

Input format :
The first line contains an integer n, denoting the number of elements in the array.
The second line contains n space-separated integers representing the elements of the array.

Output format :
The output displays n space-separated integers representing the modified array after moving all non-zero elements to the beginning and filling the remaining spaces with zeros.
Refer to the sample output for formatting specifications.

Code constraints :
1 ≤ n ≤ 20.
0 ≤ Arr[i] ≤ 20.

Sample test cases :
Input 1 :
8
4 5 0 1 9 0 5 0
Output 1 :
4 5 1 9 5 0 0 0 
Input 2 :
6
6 0 1 8 0 2
Output 2 :
6 1 8 2 0 0 

CODE:

import java.util.*;
class Array{
    public static void main(String args[]){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int arr[] = new int[n];
        for(int i=0;i<n;i++){
            arr[i]=sc.nextInt();
        }
        
        int j=0;
        int arr1[] = new int[n];
        for(int i=0;i<n;i++){
            if(arr[i]!=0){
                arr1[j]=arr[i];
                j++;
            }
        }
        for(int i=0;i<n;i++){
            System.out.print(arr1[i]+" ");
        }
    }
}
